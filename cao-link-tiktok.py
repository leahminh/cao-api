import requests
import json
import time
from datetime import datetime
import os

# H√†m t·∫£i file v·ªÅ t·ª´ URL
def download_file(url, save_path):
    response = requests.get(url)
    if response.status_code == 200:
        with open(save_path, 'wb') as file:
            file.write(response.content)
        return True
    return False

# H√†m upload file l√™n Imgur v√† l·∫•y link
def upload_to_imgur(file_path):
    url = 'https://api.imgur.com/3/upload'
    headers = {'Authorization': 'Client-ID 6b7b6a54fc39b5f'}  # S·ª≠ d·ª•ng Client ID c·ªßa b·∫°n
    with open(file_path, 'rb') as file:
        files = {'image': file}
        response = requests.post(url, headers=headers, files=files)
        if response.status_code == 200:
            response_data = response.json()
            return response_data['data']['link']
        else:
            print(f"‚ùå L·ªói upload l√™n Imgur: {response.status_code}")
            print(f"N·ªôi dung ph·∫£n h·ªìi: {response.text}")
            return None

# H√†m l·∫•y d·ªØ li·ªáu t·ª´ TikTok API
def get_data(link):
    try:
        api_url = f"https://anhcode.click/anhcode/api/dltt.php?url={link}"
        response = requests.get(api_url, timeout=10)
        response.raise_for_status()
        data = response.json()
        if data.get('code') == 0:
            return data['data']
        else:
            print(f"‚ùå API l·ªói: {data.get('msg')}")
            return None
    except Exception as e:
        print(f"‚ùå L·ªói khi c√†o: {str(e)}")
        return None

def main():
    # --- B∆∞·ªõc 1: Nh·∫≠p danh s√°ch link ---
    print("Nh·∫≠p danh s√°ch link TikTok, m·ªói link 1 d√≤ng. G√µ 'xong' ƒë·ªÉ k·∫øt th√∫c.")
    links = []
    while True:
        link = input()
        if link.lower() == 'xong':
            break
        if link.strip():
            links.append(link.strip())

    if not links:
        print("‚ö†Ô∏è B·∫°n ch∆∞a nh·∫≠p link n√†o. Tho√°t...")
        return

    # --- B∆∞·ªõc 2: H·ªèi tr∆∞·ªùng c·∫ßn c√†o ---
    field = ""
    while not field:
        print("\ntitle = ti√™u ƒë·ªÅ,\n play = video ko logo,\n music = nh·∫°c,\n cover = ·∫£nh b√¨a, etc.): ")
        field = input("\nB·∫°n mu·ªën c√†o m·ª•c n√†o? (v√≠ d·ª•: title, play, music, cover, etc.): ").strip()
        if not field:
            print("‚ö†Ô∏è B·∫°n ph·∫£i nh·∫≠p t√™n m·ª•c!")

    # --- B∆∞·ªõc 3: H·ªèi d·∫°ng l∆∞u ---
    format_choice = ""
    while format_choice not in ['txt', 'json']:
        format_choice = input("\nB·∫°n mu·ªën l∆∞u d·∫°ng n√†o? (txt/json): ").strip().lower()
        if format_choice not in ['txt', 'json']:
            print("‚ö†Ô∏è Ch·ªâ ƒë∆∞·ª£c ch·ªçn 'txt' ho·∫∑c 'json'!")

    # T·∫°o t√™n file t·ª± ƒë·ªông
    now = datetime.now()
    time_str = now.strftime("%H_%M_%S-%d_%m_%Y")  # gi·ªù_ph√∫t_gi√¢y-ng√†y_th√°ng_nƒÉm
    time_str = time_str.replace('/', '-')  # Thay th·∫ø d·∫•u '/' b·∫±ng d·∫•u '-' ƒë·ªÉ tr√°nh l·ªói
    file_name = f"LAMDev-{time_str}.{format_choice}"


    # --- B·∫Øt ƒë·∫ßu c√†o d·ªØ li·ªáu ---
    print(f"\nüîé B·∫Øt ƒë·∫ßu c√†o '{field}' t·ª´ {len(links)} link...")

    results = []
    for idx, link in enumerate(links, 1):
        data = get_data(link)
        if data:
            value = data.get(field)
            if value is not None:
                # T·∫£i c√°c file n·∫øu c·∫ßn thi·∫øt (cover, play, avatar)
                if field in ['cover', 'play', 'avatar']:
                    file_url = value
                    file_extension = '.jpg' if field in ['cover', 'avatar'] else '.mp4'
                    file_name_local = f"{field}-{idx}{file_extension}"

                    # T·∫£i file
                    download_file(file_url, file_name_local)

                    # Upload l√™n Imgur
                    file_link = upload_to_imgur(file_name_local)
                    if file_link:
                        results.append(file_link)
                        print(f"[{idx}/{len(links)}] ‚úÖ Link {field} ƒë√£ ƒë∆∞·ª£c upload: {file_link}")
                    else:
                        print(f"[{idx}/{len(links)}] ‚ö†Ô∏è Kh√¥ng th·ªÉ upload file {field}")
                    os.remove(file_name_local)  # X√≥a file sau khi upload
                else:
                    results.append(str(value))
                    print(f"[{idx}/{len(links)}] ‚úÖ {value}")
            else:
                print(f"[{idx}/{len(links)}] ‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y m·ª•c '{field}' trong link n√†y")
        else:
            print(f"[{idx}/{len(links)}] ‚ùå Kh√¥ng l·∫•y ƒë∆∞·ª£c d·ªØ li·ªáu cho link n√†y")
        time.sleep(0.5)  # ch·ªëng spam server

    # --- L∆∞u file ---
    if format_choice == 'txt':
        with open(file_name, "w", encoding="utf-8") as f:
            for item in results:
                f.write(item + "\n")
    elif format_choice == 'json':
        with open(file_name, "w", encoding="utf-8") as f:
            json.dump(results, f, ensure_ascii=False, indent=4)

    print(f"\n‚úÖ ƒê√£ l∆∞u {len(results)} k·∫øt qu·∫£ v√†o file: {file_name}")

if __name__ == "__main__":
    main()
